COMO INICIAR UM PROJETO "node.js"
-npm init (Digitar no console na raiz do projeto)
-npm install <bibliotecas> ou npm i <bibliotecas> (Instalar bibliotecas)
--o npm init cria o arquivo "package.json"; este arquivo é usado pelo npm/node para administrar os módulos/bibliotecas.
-para instalar as bibliotecas de um projeto já existente, localize a pasta raiz do projeto e digite npm install (sem parâmetros) no console

-após iniciar o pojeto, criar um arquivo git.ignore na pasta raiz do projeto para ignorar arquivos que poderão sobrecarregar seu projeto (como "node_modules" e arquivos do banco de dados)

*A PASTA RAIZ DO ARQUIVO CLONADO NÃO PODE TER O MESMO NOME DE UMA PASTA RAIZ JÁ EXISTENTE NO SEU LOCAL

-------------------------------------------------------------------

FUNCIONAMENTO "express.js"
-Implementa rotas, middlewares e renderização de páginas por templates
--middleware: termo usado para identificar extensões a uma lib existente, as rotas e renderização são considerados "middlewres". É como se fosse uma extensão do VsCode, ajudando na seção de rotas do projeto.

No "expressjs", para configurar uma pasta, no sistema de arquivo, o método utilizado é o ".use". Este método necessita de dois parâmetros, o primeiro é como o HTTP irá requisitar o arquivo, ou seja, este parâmetro fará parte da URL que o Browser(cliente) irá solicitar.
O segundo parâmetro é o caminho da pasta, no sistema de arquivos de sistema operacional em que o back-end está rodando, portanto deve-se obedecer as regras do sistema de arquivo do S.O. exemplo:
app.use("/static", express.static(__dirname + "/static"))
-"/static": endpoint que o cliente irá visualizar;
-"express.static": middleware p/ configurar uma pasta de arquivos estaticos;
-"__dirname": variavel interna do "node.js", ela identifica a pasta do programa no S.O.
